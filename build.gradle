plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
    id 'ru.vyarus.quality' version '4.5.0'
}

repositories {
    mavenCentral()
}

group 'app.pure'
version '1.0'

ext {
     allureVersion = "2.13.8"
    selenideVersion = "5.19.0"
    junitVersion = "5.7.0"
}

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    implementation("org.aeonbits.owner:owner:1.0.12")
    implementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:${selenideVersion}",
            "io.qameta.allure:allure-selenide:${allureVersion}",
            "com.github.javafaker:javafaker:1.0.2",
            "ch.qos.logback:logback-classic:1.2.3",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties = System.properties
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : false,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',

        ]


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    systemProperty "chromeoptions.prefs","intl.accept_language=en"
    useJUnitPlatform()

}

task smoke_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'smoke'
        excludeTags 'smoke'
    }
    systemProperty 'example_property', 'example_value'
}